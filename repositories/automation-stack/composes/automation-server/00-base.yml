version: "2"
services:
  jenkins_master:
    depends_on:
    - jenkins_slave
    build:
      context: .
      dockerfile: Dockerfile
      args:
      - FROM=${DOCKER_IMAGE_PREFIX}jenkins-master:${DOCKER_IMAGE_VERSION}
      - DOCKER_GID=${HOST_DOCKER_GID}
    image: x-${COMPOSE_PROJECT_NAME}-jenkins-master:${DOCKER_IMAGE_VERSION}
    restart: on-failure
    environment:
      JENKINS_HOME: /var/jenkins/master/
      CASC_ADMIN_ADDRESS: ${ADMIN_ADDRESS}
      CASC_SELF_URL: ${SELF_URL}
      CASC_SLAVE_IMAGE: x-${COMPOSE_PROJECT_NAME}-jenkins-slave:${DOCKER_IMAGE_VERSION}
      CASC_SLAVE_ENVIRONMENTS: |
        JENKINS_AGENT_WORKDIR=/var/jenkins/slave/
      CASC_SLAVE_VOLUMES: |
        /var/run/docker.sock:/var/run/docker.sock
        /var/jenkins/slave/:/var/jenkins/slave/
    volumes:
    - /var/run/docker.sock:/var/run/docker.sock
    - /var/jenkins/master/:/var/jenkins/master/
    working_dir: /var/jenkins/master/
    ports:
    - ${JENKINS_DASHBOARD_PORT}:8080
    cpu_shares: 1024
    mem_limit: 1gb
    memswap_limit: 0
    labels:
    - version=${DOCKER_IMAGE_VERSION}

  jenkins_slave:
    build:
      context: .
      dockerfile: Dockerfile
      args:
      - FROM=${DOCKER_IMAGE_PREFIX}jenkins-slave:${DOCKER_IMAGE_VERSION}
      - DOCKER_GID=${HOST_DOCKER_GID}
    image: x-${COMPOSE_PROJECT_NAME}-jenkins-slave:${DOCKER_IMAGE_VERSION}
    restart: on-failure
    environment:
    - JENKINS_AGENT_WORKDIR=/var/jenkins/slave/
    volumes:
    - /var/run/docker.sock:/var/run/docker.sock
    - /var/jenkins/slave/:/var/jenkins/slave/
    working_dir: /var/jenkins/slave/
    # This is a fake slave. It prevents deleting slave Docker image during artifacts cleanup.
    # You have to configure `docker-plugin` to use slaves correctly.
    entrypoint: []
    command: ["sleep", "infinity"]
    cpu_shares: 1024
    mem_limit: 1gb
    memswap_limit: 0
    labels:
    - version=${DOCKER_IMAGE_VERSION}
