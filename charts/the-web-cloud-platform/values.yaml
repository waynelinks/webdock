httpServer:
  image:
    name: "docker.pkg.github.com/damlys/webdock/the-web-cloud-server"
    tag: "dist-0.0.0"
    pullPolicy: IfNotPresent
    pullSecrets: []
    #- name: "image-pull-secret"

  environmentVariables:
    decoded: {}
    #  USERNAME: ""
    encoded: {}
    #  PASSWORD: ""

  minReplicas: 2
  maxReplicas: 5
  strategy:
    type: RollingUpdate
    #rollingUpdate:
    #  maxSurge: 25%
    #  maxUnavailable: 25%
  progressDeadlineSeconds: 600
  minReadySeconds: 0
  readinessProbe: {}
  #  initialDelaySeconds: 30
  #  periodSeconds: 10
  #  timeoutSeconds: 1
  #  failureThreshold: 3
  #  successThreshold: 1
  livenessProbe: {}
  #  initialDelaySeconds: 30
  #  periodSeconds: 10
  #  timeoutSeconds: 1
  #  failureThreshold: 3
  #  successThreshold: 1
  terminationGracePeriodSeconds: 30
  terminationMessagePath: /dev/termination-log

  podAnnotations: {}
  #  prometheus.io/scrape: "true"

  securityContext:
    pod: {}
    #  fsGroup: 1000
    container: {}
    #  capabilities:
    #    drop:
    #      - ALL
    #  readOnlyRootFilesystem: true
    #  runAsNonRoot: true
    #  runAsUser: 1000
    #  runAsGroup: 1000

  resources: {}
  #  requests:
  #    cpu: 100m
  #    memory: 128M
  #  limits:
  #    cpu: 1000m
  #    memory: 1G

  nodeSelector: {}

  affinity: {}

  tolerations: []

  extraPorts: []
  #- name: debugger
  #  containerPort: 9229
  #  hostPort: 9229
  #  protocol: TCP

  service:
    annotations: {}
    #  foo: "bar"
    type: ClusterIP
    clusterIP: ""
    loadBalancerIP: ""
    nodePort: 0

  ingress:
    enabled: false
    annotations: {}
    #  ingress.kubernetes.io/auth-type: "basic"
    #  ingress.kubernetes.io/auth-secret: "htpasswd-secret"
    #  nginx.ingress.kubernetes.io/auth-type: "basic"
    #  nginx.ingress.kubernetes.io/auth-secret: "htpasswd-secret"
    hosts: []
    #- www.example.tld/api/v1
    tls: []
    #- hosts:
    #  - www.example.tld
    #  secretName: "tls-secret"

  volumes:
    sources: []
    #- name: app-code
    #  hostPath:
    #    type: Directory
    #    path: /home/<user>/workspace/webdock/images/the-web-cloud-server
    #- name: npm-cache
    #  persistentVolumeClaim:
    #    claimName: global-npm-cache
    mounts: []
    #- name: app-code
    #  mountPath: /app
    #- name: npm-cache
    #  mountPath: /var/cache/npm

tester:
  image:
    name: "docker.pkg.github.com/damlys/webdock/the-web-cloud-tester"
    tag: "dist-0.0.0"
    pullPolicy: IfNotPresent
    pullSecrets: []
    #- name: "image-pull-secret"

  environmentVariables:
    decoded: {}
    #  USERNAME: ""
    encoded: {}
    #  PASSWORD: ""

  replicas: 0

  podAnnotations: {}
  #  foo: "bar"

  securityContext:
    pod: {}
    #  fsGroup: 1000
    container: {}
    #  capabilities:
    #    drop:
    #      - ALL
    #  readOnlyRootFilesystem: true
    #  runAsNonRoot: true
    #  runAsUser: 1000
    #  runAsGroup: 1000

  resources: {}
  #  requests:
  #    cpu: 100m
  #    memory: 128M
  #  limits:
  #    cpu: 1000m
  #    memory: 1G

  nodeSelector: {}

  affinity: {}

  tolerations: []

  ports: []
  #- name: debugger
  #  containerPort: 9229
  #  hostPort: 9229
  #  protocol: TCP

  volumes:
    sources: []
    #- name: app-code
    #  hostPath:
    #    type: Directory
    #    path: /home/<user>/workspace/webdock/images/the-web-cloud-tester
    #- name: npm-cache
    #  persistentVolumeClaim:
    #    claimName: global-npm-cache
    mounts: []
    #- name: app-code
    #  mountPath: /app
    #- name: npm-cache
    #  mountPath: /var/cache/npm

mongodb:
  enabled: false
